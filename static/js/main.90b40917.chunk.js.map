{"version":3,"sources":["components/TitleText/TitleText.js","components/DrawMap/SetMapView.js","components/images/satellite.png","components/DrawMap/DrawMap.js","components/DisplaySearchMenu/DisplaySearchMenu.js","components/DisplayResults/DisplayResults.js","components/TomTomSearch.js","components/FetchISS.js","App.js","reportWebVitals.js","index.js"],"names":["TitleText","id","SetMapView","props","map","setView","getCenter","lat","lng","DrawMap","mapContainer","lon","query","queryIsNull","results","myIcon","L","icon","iconUrl","satellite","iconSize","iconAnchor","useState","setMap","MapContainer","center","zoom","whenCreated","setMaxZoom","minZoom","TileLayer","attribution","url","locale","Marker","position","Popup","poi","name","address","freeformAddress","type","DisplaySearchMenu","changeRadius","changeKeyword","getCoords","radius","keyword","value","defaultChecked","className","onChange","e","onClick","DisplayResults","formedList","undefined","streetName","countrySubdivision","country","postalCode","phone","href","target","categories","length","category","index","TomTomSearch","coords","setRadius","setKeyword","setQuery","radios","document","getElementsByName","tempRadius","checked","tomtom_API","fetch","then","coordQuery","ok","json","queryTemp","useEffect","FetchISS","setCoords","effectCall","setEffectCall","fetchISS","latitude","longitude","catch","err","console","log","message","prev","setTimeout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.90b40917.chunk.js","sourcesContent":["import React from 'react'\nimport './titleText.css'\n\nfunction TitleText() {\n  return (\n    <div id='titleText'>\n      <h1>ISS Travel Guide</h1>\n      <h4>Find and visit locales along the path of the International Space Station.</h4>\n    </div>\n  )\n}\n\nexport default TitleText","import React from 'react'\n\n\n\nfunction SetMapView(props) {\n  const { map } = props;\n  map.setView([map.getCenter().lat, map.getCenter().lng]);\n  return (\n    <div>\n      \n    </div>\n  )\n}\n\nexport default SetMapView","export default __webpack_public_path__ + \"static/media/satellite.9edcbbb1.png\";","import React, { useState } from 'react'\nimport L from 'leaflet'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport SetMapView from './SetMapView'\nimport './drawMap.css'\nimport satellite from '../images/satellite.png'\n\nfunction DrawMap(props) {\n  const {lat, lon, query} = props;\n  let mapContainer;\n  let queryIsNull = true;\n\n  if(query.results !== 'null' && query.results !== 'nothing') {\n    queryIsNull = false;\n  }\n  //Custom Icon\n  const myIcon = L.icon({\n    iconUrl: satellite,\n    iconSize: [100,100],\n    iconAnchor: [50,50],\n  });\n  \n  const [map, setMap] = useState(null);\n  if(lat !== 0 && lon !== 0) {\n   mapContainer =\n    <MapContainer id=\"map\" \n      center={[lat, lon]} \n      zoom={1}\n      whenCreated={setMap}\n      setMaxZoom={3}\n      minZoom={3}>\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n        />\n        { !queryIsNull ? \n        query.results.map(locale => \n          <Marker key={locale.id}\n          position={[locale.position.lat, locale.position.lon]}>\n\n            <Popup>\n            { locale.poi && locale.poi.name ?\n            `Name: ${locale.poi.name}` : null } <br />\n            { locale.address && locale.address.freeformAddress ? \n            `Location: ${locale.address.freeformAddress}` : null } <br />\n            { locale.type ? \n            `Location Type: ${locale.type}` : null }\n            </Popup>\n\n          </Marker>          \n        ): null }\n        <Marker \n          position={[lat, lon]} \n          icon={myIcon} />\n    </MapContainer>\n  }\n\n  return (\n    <div>    \n      {map ? <SetMapView map={map} /> : null}\n      <div id=\"mapContainer\">\n        { mapContainer ? mapContainer : null }\n      </div>\n    </div>\n  )\n}\n\nexport default DrawMap","import React from 'react'\nimport './displaySearchMenu.css'\n\nfunction DisplaySearchMenu(props) {\n  const {changeRadius, changeKeyword, getCoords, radius, keyword, lat, lon} = props;\n  \n  return (\n    <div>\n      <div id='searchBox'>\n        <div id='latLon'>\n          <p>Latitude: {lat}</p>\n          <p>Longitude: {lon}</p>\n        </div>\n        <div id='radios'>\n          <input type='radio' name='units' value='Miles' defaultChecked></input>\n          <label>Miles</label>\n          <input type='radio' name='units' value='Meters'></input>\n          <label>Meters</label>\n        </div>\n\n        <div id='inputsDiv'>\n          <div className='input'>\n            <label>Search Radius </label>\n            <input type='text' value={radius} onChange={e => changeRadius(e)}></input>\n          </div>\n          <div className='input'>\n            <label> Search Keyword </label>\n            <input type='text' value={keyword} onChange={e => changeKeyword(e)}></input>\n          </div>\n        </div>\n       \n        <button onClick={getCoords}>Submit</button>\n      </div>\n    </div>\n  )\n}\n\nexport default DisplaySearchMenu","import React from 'react'\nimport './displayResults.css'\n\n\nfunction DisplayResults({ query }) {\n let formedList = 'Thinking...';\n if(query.results !== 'null' && query.results !== 'nothing' && query.results !== undefined) {\n  formedList = query.results.map(locale => \n    <div key={locale.id} className='locale'>\n      <ul>\n      \n      {locale.poi && locale.poi.name ?\n      <li><span className='liName'>Name:</span> \n      <span className='liInfo'> {locale.poi.name}</span></li> \n      : null} \n\n      {locale.address ? \n      <li><span className='liName'>Location:</span>\n        <ul id='address'>\n          {locale.address.freeformAddress ? \n          <li><span className='liInfo'>{locale.address.freeformAddress}</span></li> : null }\n          {locale.address.streetName ? \n          <li><span className='liInfo'><span className='liName'>Street:</span> {locale.address.streetName}</span></li> : null }\n          {locale.address.countrySubdivision ?\n          <li><span className='liInfo'>{locale.address.countrySubdivision}, {locale.address.country}, {locale.address.postalCode}</span></li> : null }\n        </ul> \n      </li>\n      : null}\n\n      {locale.poi && locale.poi.phone ? \n      <li><span className='liName'>Phone Number:</span> \n      <span className='liInfo'> {locale.poi.phone}</span></li>\n      : null}\n        \n      {locale.poi && locale.poi.url ? \n      <li><span className='liName'>Website:</span> \n      <span className='liInfo'> <a href={locale.poi.url} target=\"_blank\">{locale.poi.url}</a></span></li>\n      : null}\n        \n      {locale.poi && locale.poi.categories.length > 0 ? \n      <li><span className='liName'>Tags:</span>  \n      <span className='liInfo'>{\n        locale.poi.categories.map((category, index) => \n          <div key={index}>\n            <ul>\n              <li>\n                <span className='tags'>{category}</span>\n              </li>\n            </ul>\n          </div>\n        )\n      }</span></li>\n      : null}\n\n      {locale.type ? \n      <li><span className='liName'>Location Type:</span>\n      <span className='liInfo'> {locale.type}</span></li> \n      : null }\n\n      </ul>\n    </div>\n )} else if (query.results === 'null') {\n    formedList = \n    <div className='locale'>\n      <ul>\n        <li>\n          <span className='liName'>Loading...</span>\n          <br />\n          Please wait...\n        </li>\n\n      </ul>\n    </div>\n    } else {\n    formedList = \n      <div className='locale'>\n        <ul>\n          <li>\n            <span className='liName'>The ISS couldn't find anything close by.</span>\n            <br />\n            Try increasing the search radius or changing\n            the keyword.\n          </li>\n\n        </ul>\n      </div>\n    }\n\n  return (\n    <div>\n      <div id=\"displayResults\">\n        {formedList}\n      </div>\n    </div>\n  )\n}\n\nexport default DisplayResults","import React, { useState, useEffect } from 'react'\nimport TitleText from './TitleText/TitleText'\nimport DrawMap from './DrawMap/DrawMap'\nimport DisplaySearchMenu from './DisplaySearchMenu/DisplaySearchMenu'\nimport DisplayResults from './DisplayResults/DisplayResults'\n\n\nfunction TomTomSearch(props) {\n  const {coords} = props;\n  const [ radius, setRadius ] = useState(1000);\n  const [ keyword, setKeyword ] = useState('food');\n  const [ query, setQuery ] = useState({results: 'null'});\n  let radios = document.getElementsByName('units');\n\n  function getCoords() {\n  let tempRadius = radius;\n  if(radios[0].checked) {\n    tempRadius = radius * 1609.34;     \n  }\n  //Fetch TomTom coordinate search endpoint\n  const tomtom_API = `https://api.tomtom.com/search/2/search/${keyword}.json?typeahead=false&limit=12&ofs=0&lat=${coords.lat}&lon=${coords.lon}&radius=${tempRadius}&language=en-US&minFuzzyLevel=1&maxFuzzyLevel=2&key=ZO8TcaaYrxWNrZPmiTpIyKepTgr5yPqU`;\n  fetch(tomtom_API)\n  .then(coordQuery => {\n    if(coordQuery.ok) {\n    return coordQuery.json();\n    } else return([])\n  })\n  .then(queryTemp => {\n    if(queryTemp.results.length !== 0) {\n      setQuery(queryTemp);\n    } else {\n      setQuery({results: 'nothing'});\n      }\n    })\n  }\n\n  useEffect(\n    () => {\n      getCoords();\n    }\n  , []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  function changeRadius(e) {\n    setRadius(e.target.value);\n  }\n  function changeKeyword(e) {\n    setKeyword(e.target.value);\n  }\n  \n  return (\n    <div>\n      <TitleText />\n      <DrawMap lat={coords.lat} lon={coords.lon} query={query}/>\n      <DisplaySearchMenu \n      changeRadius={e => changeRadius(e)}\n      changeKeyword={e => changeKeyword(e)}\n      getCoords={getCoords}\n      radius={radius}\n      keyword={keyword}\n      lat={coords.lat}\n      lon={coords.lon}/>\n      <DisplayResults query={query}/>\n    </div>\n  )\n}\n\nexport default TomTomSearch\n","import React, {useState, useEffect} from 'react'\nimport TomTomSearch from './TomTomSearch'\nimport '../body.css'\n\nfunction FetchISS() {\n  const [ coords, setCoords] = useState({lat: null, lon: null});\n  const [ effectCall, setEffectCall ] = useState(false);\n  \n  useEffect(\n    () => {\n      fetchISS();\n    }\n  ,[]);\n\n  useEffect(\n    () => {\n      setTimeout(() => {\n        fetchISS();\n      }, 3000);\n    }\n  , [effectCall]);\n\n  function fetchISS() {\n    const iss_API = 'https://api.wheretheiss.at/v1/satellites/25544';\n    fetch(iss_API)\n    .then(results => results.json())\n    .then(results => {\n      setCoords({lat: results.latitude, lon: results.longitude})\n    }).catch(err => {\n      console.log(err.message);\n    });\n    setEffectCall(prev => !prev);\n  }\n\n  return(\n    <div>\n      { coords.lat !== null && coords.lon !== null ? \n      <TomTomSearch coords={coords} /> : null } \n    </div>\n  )\n}\n\nexport default FetchISS\n","import './App.css';\nimport FetchISS from './components/FetchISS';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FetchISS />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}